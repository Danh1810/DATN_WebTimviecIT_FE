import React, { useState, useEffect } from "react";
import axios from "../services/axios";
import { useSelector, useDispatch } from "react-redux";
import { toast } from "react-toastify";
import { X } from "@mui/icons-material";

const ProfileForm = () => {
  const [previewImage, setPreviewImage] = useState(null);
  const [savedData, setSavedData] = useState(null);
  const id = localStorage.getItem("id");
  const [formData, setFormData] = useState({
    anhDaiDien: "",
    hoVaTen: "",
    ngaySinh: "",
    thanhPho: "",
    diaChi: "",
    gioiTinh: "",
    soDienThoai: "",
  });

  const [isEditing, setIsEditing] = useState(false);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };
  const provinces = [
    "H√† N·ªôi",
    "TP H·ªì Ch√≠ Minh",
    "H·∫£i Ph√≤ng",
    "ƒê√† N·∫µng",
    "C·∫ßn Th∆°",
    "An Giang",
    "B√† R·ªãa - V≈©ng T√†u",
    "B·∫Øc Giang",
    "B·∫Øc K·∫°n",
    "B·∫°c Li√™u",
    "B·∫Øc Ninh",
    "B·∫øn Tre",
    "B√¨nh ƒê·ªãnh",
    "B√¨nh D∆∞∆°ng",
    "B√¨nh Ph∆∞·ªõc",
    "B√¨nh Thu·∫≠n",
    "C√† Mau",
    "Cao B·∫±ng",
    "ƒê·∫Øk L·∫Øk",
    "ƒê·∫Øk N√¥ng",
    "ƒêi·ªán Bi√™n",
    "ƒê·ªìng Nai",
    "ƒê·ªìng Th√°p",
    "Gia Lai",
    "H√† Giang",
    "H√† Nam",
    "H√† Tƒ©nh",
    "H·∫£i D∆∞∆°ng",
    "H·∫≠u Giang",
    "H√≤a B√¨nh",
    "H∆∞ng Y√™n",
    "Kh√°nh H√≤a",
    "Ki√™n Giang",
    "Kon Tum",
    "Lai Ch√¢u",
    "L√¢m ƒê·ªìng",
    "L·∫°ng S∆°n",
    "L√†o Cai",
    "Long An",
    "Nam ƒê·ªãnh",
    "Ngh·ªá An",
    "Ninh B√¨nh",
    "Ninh Thu·∫≠n",
    "Ph√∫ Th·ªç",
    "Ph√∫ Y√™n",
    "Qu·∫£ng B√¨nh",
    "Qu·∫£ng Nam",
    "Qu·∫£ng Ng√£i",
    "Qu·∫£ng Ninh",
    "Qu·∫£ng Tr·ªã",
    "S√≥c TrƒÉng",
    "S∆°n La",
    "T√¢y Ninh",
    "Th√°i B√¨nh",
    "Th√°i Nguy√™n",
    "Thanh H√≥a",
    "Th·ª´a Thi√™n Hu·∫ø",
    "Ti·ªÅn Giang",
    "Tr√† Vinh",
    "Tuy√™n Quang",
    "Vƒ©nh Long",
    "Vƒ©nh Ph√∫c",
    "Y√™n B√°i",
  ];

  const handleFileChange = (e) => {
    const { name, files } = e.target;
    if (files[0]) {
      setFormData((prev) => ({ ...prev, [name]: files[0] }));
      setPreviewImage(URL.createObjectURL(files[0]));
    }
  };

  const fetchData = async () => {
    try {
      const response = await axios.get("/ngtviec/detail", {
        params: { id: id },
      });

      if (response.data && Object.keys(response.data).length > 0) {
        setSavedData(response.data);
      } else {
        setSavedData(null);
      }
    } catch (error) {
      console.error(error);
    }
  };

  const handleAddJobSeeker = async (e) => {
    e.preventDefault();

    if (!formData.anhDaiDien) {
      console.error("Ch∆∞a ch·ªçn ·∫£nh ƒë·∫°i di·ªán!");
      return;
    }

    const formDataToSend = new FormData();
    formDataToSend.append("hoVaTen", formData.hoVaTen);
    formDataToSend.append("ngaySinh", formData.ngaySinh);
    formDataToSend.append("thanhPho", formData.thanhPho);
    formDataToSend.append("diaChi", formData.diaChi);
    formDataToSend.append("gioiTinh", formData.gioiTinh);
    formDataToSend.append("soDienThoai", formData.soDienThoai);
    formDataToSend.append("anhDaiDien", formData.anhDaiDien);
    formDataToSend.append("MaND", id);

    try {
      const response = // Update endpoint
        await axios.post("/ngtviec", formDataToSend); // Create endpoint
      setSavedData(response.data);
      setIsEditing(false);
    } catch (error) {
      console.error("Error saving job seeker:", error);
    }
  };

  const handleEdit = async (e) => {
    e.preventDefault();
    console.log("üöÄ ~ Object.entries ~ formDat:", formData.anhDaiDien);
    const formDataToSend = new FormData();

    Object.entries(formData).forEach(([key, value]) => {
      formDataToSend.append(key, value);
    });
    console.log("üöÄ ~ Object.entries ~ formDataToSend:", formDataToSend);

    try {
      await axios.put("ngtviec/update", formDataToSend);
      toast.success("C·∫≠p nh·∫≠t h·ªì s∆° th√†nh c√¥ng");
      setIsEditing(false); // Close modal after update
      fetchData();
    } catch (error) {
      console.error("Error updating CV:", error);
      toast.error("C·∫≠p nh·∫≠t h·ªì s∆° th·∫•t b·∫°i");
    }
  };
  useEffect(() => {
    fetchData();
  }, []);

  const handleEdit1 = () => {
    setFormData(savedData);
    setPreviewImage(savedData.anhDaiDien);
    setIsEditing(true);
  };
  return (
    <div className="container mx-auto p-4 flex flex-col min-h-screen">
      <h1 className="text-2xl font-bold mb-4">Th√¥ng tin c√° nh√¢n</h1>

      {!savedData || isEditing ? (
        <form className="mb-6 p-4 border rounded shadow">
          <div className="mb-6 flex flex-col items-center">
            <div className="w-48 h-48 rounded-full overflow-hidden border mb-4">
              <img
                src={
                  previewImage ||
                  formData.anhDaiDien ||
                  "https://res.cloudinary.com/dlxczbtva/image/upload/v1735207547/webtimviecit/anh-profile-tiet-lo-g-ve-ban-1_dsmrcf.jpg"
                }
                alt="Avatar"
                className="w-full h-full object-cover"
              />
            </div>
            <input
              type="file"
              name="anhDaiDien"
              onChange={handleFileChange}
              className="text-sm"
            />
          </div>

          <div className="grid grid-cols-2 gap-4">
            <div>
              <label className="block font-medium">H·ªç v√† T√™n</label>
              <input
                type="text"
                name="hoVaTen"
                value={formData.hoVaTen}
                onChange={handleChange}
                className="w-full border rounded px-2 py-1"
                required
              />
            </div>

            <div>
              <label className="block font-medium" htmlFor="ngaySinh">
                Ng√†y Sinh
              </label>
              <input
                type="date"
                id="ngaySinh"
                name="ngaySinh"
                value={formData.ngaySinh}
                onChange={handleChange}
                max={new Date().toISOString().split("T")[0]} // Prevents future dates
                min={
                  new Date(
                    new Date().setFullYear(new Date().getFullYear() - 18)
                  )
                    .toISOString()
                    .split("T")[0]
                } // Ensures the user is at least 18 years old
                className="w-full border rounded px-2 py-1"
                aria-label="Ng√†y Sinh"
              />
            </div>

            <div>
              <label className="block font-medium">T·ªânh/Th√†nh ph·ªë</label>
              <select
                name="thanhPho"
                value={formData.thanhPho}
                onChange={handleChange}
                className="w-full border rounded px-2 py-1"
                required
              >
                <option value="">Ch·ªçn t·ªânh/th√†nh ph·ªë</option>
                {provinces.map((province) => (
                  <option key={province} value={province}>
                    {province}
                  </option>
                ))}
              </select>
            </div>

            <div>
              <label className="block font-medium">ƒê·ªãa ch·ªâ</label>
              <input
                type="text"
                name="diaChi"
                value={formData.diaChi}
                onChange={handleChange}
                className="w-full border rounded px-2 py-1"
              />
            </div>

            <div>
              <label className="block font-medium">Gi·ªõi T√≠nh</label>
              <select
                name="gioiTinh"
                value={formData.gioiTinh}
                onChange={handleChange}
                className="w-full border rounded px-2 py-1"
              >
                <option value="">Ch·ªçn</option>
                <option value="Nam">Nam</option>
                <option value="N·ªØ">N·ªØ</option>
                <option value="Kh√°c">Kh√°c</option>
              </select>
            </div>

            <div>
              <label className="block font-medium" htmlFor="soDienThoai">
                S·ªë ƒëi·ªán tho·∫°i
              </label>
              <input
                type="text"
                id="soDienThoai"
                name="soDienThoai"
                value={formData.soDienThoai}
                onChange={handleChange}
                className="w-full border rounded px-2 py-1"
                required
                pattern="^(0[3|5|7|8|9])[0-9]{8}$" // Regex pattern for Vietnamese phone numbers
                title="S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá, vui l√≤ng nh·∫≠p l·∫°i." // Title will show in browsers that support it
              />
              {formData.soDienThoai &&
                !/^(0[3|5|7|8|9])[0-9]{8}$/.test(formData.soDienThoai) && (
                  <p className="text-red-500 text-sm mt-1">
                    S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá, vui l√≤ng nh·∫≠p l·∫°i.
                  </p>
                )}
            </div>
          </div>

          <button
            onClick={isEditing ? handleEdit : handleAddJobSeeker}
            className="mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
          >
            {isEditing ? "C·∫≠p nh·∫≠t" : "L∆∞u"}
          </button>
          <button
            onClick={() => {
              setIsEditing(false); // Tho√°t kh·ªèi ch·∫ø ƒë·ªô ch·ªânh s·ª≠a
              setPreviewImage(null);
            }}
            className="mt-4 px-4 py-2 ml-3 bg-yellow-500 text-white rounded hover:bg-blue-600"
          >
            H·ªßy
          </button>
        </form>
      ) : (
        <div className="mt-6 p-6 border rounded-lg shadow-lg bg-white">
          <div className="flex items-center gap-4">
            <h2 className="text-xl font-bold">Th√¥ng tin ƒë√£ l∆∞u</h2>
            <button
              onClick={handleEdit1}
              className="px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600"
            >
              S·ª≠a
            </button>
          </div>
          <div className="mt-6 p-6 border rounded-lg shadow-lg bg-white">
            <div className="flex flex-col md:flex-row items-start gap-6">
              {/* ·∫¢nh ƒë·∫°i di·ªán */}
              <div className="flex-shrink-0">
                <img
                  src={
                    savedData.anhDaiDien || "https://via.placeholder.com/150"
                  }
                  alt="Avatar"
                  className="w-28 h-28 rounded-full object-cover border-2 border-gray-300 shadow-sm"
                />
                <p className="text-sm text-gray-500 mt-2 text-center">
                  ·∫¢nh ƒë·∫°i di·ªán
                </p>
              </div>
              {/* Th√¥ng tin c√° nh√¢n */}
              <div className="flex-1">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label className="block font-medium text-gray-600 mb-1">
                      H·ªç v√† T√™n
                    </label>
                    <div className="text-gray-800 font-medium">
                      {savedData.hoVaTen || "Ch∆∞a c·∫≠p nh·∫≠t"}
                    </div>
                  </div>

                  <div>
                    <label className="block font-medium text-gray-600 mb-1">
                      Ng√†y Sinh
                    </label>
                    <div className="text-gray-800 font-medium">
                      {new Date(savedData.ngaySinh).toLocaleDateString()}
                    </div>
                  </div>

                  <div>
                    <label className="block font-medium text-gray-600 mb-1">
                      T·ªânh/Th√†nh ph·ªë
                    </label>
                    <div className="text-gray-800 font-medium">
                      {savedData.thanhPho || "Ch∆∞a c·∫≠p nh·∫≠t"}
                    </div>
                  </div>

                  <div>
                    <label className="block font-medium text-gray-600 mb-1">
                      ƒê·ªãa ch·ªâ
                    </label>
                    <div className="text-gray-800 font-medium">
                      {savedData.diaChi || "Ch∆∞a c·∫≠p nh·∫≠t"}
                    </div>
                  </div>

                  <div>
                    <label className="block font-medium text-gray-600 mb-1">
                      Gi·ªõi t√≠nh
                    </label>
                    <div className="text-gray-800 font-medium">
                      {savedData.gioiTinh || "Ch∆∞a c·∫≠p nh·∫≠t"}
                    </div>
                  </div>

                  <div>
                    <label className="block font-medium text-gray-600 mb-1">
                      S·ªë ƒëi·ªán tho·∫°i
                    </label>
                    <div className="text-gray-800 font-medium">
                      {savedData.soDienThoai || "Ch∆∞a c·∫≠p nh·∫≠t"}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ProfileForm;
